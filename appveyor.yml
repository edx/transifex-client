# Notes:
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#   This file is based on the following resources:
#   - https://www.appveyor.com/docs/appveyor-yml/  (appveyor yaml reference)
#   - https://www.appveyor.com/docs/lang/python/   (using python stack in appveyor)
#   - https://packaging.python.org/guides/supporting-windows-using-appveyor/
#   - https://github.com/ogrisel/python-appveyor-demo

#---------------------------------#
#      general configuration      #
#---------------------------------#
# version format
version: 1.0.{build}

# Start builds on tags only (GitHub, BitBucket, GitLab, Gitea)
# skip_non_tags: true

#---------------------------------#
#    environment configuration    #
#---------------------------------#
environment:
  matrix:
    - PYTHON: "C:\\Python27"
    - PYTHON: "C:\\Python27-x64"
    - PYTHON: "C:\\Python37"
    - PYTHON: "C:\\Python37-x64"

matrix:
  fast_finish: true

# scripts that run after cloning repository
install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "python -m pip install --disable-pip-version-check --user --upgrade pip"
  - "python -m pip install --no-use-pep517 pyinstaller==3.6"

  # Set up the project in develop mode. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "python -m pip install -e ."

#---------------------------------#
#       build configuration       #
#---------------------------------#
# disable automatic appveyor artifact builds, we don't need them in python
build: off

build_script:
  # Build the compiled extension
  #- "%PYTHON%\\python.exe setup.py build"
  - pyinstaller contrib/tx.spec

#---------------------------------#
#       tests configuration       #
#---------------------------------#
test_script:
  # Run the project tests
  #- "%PYTHON%\\python.exe setup.py nosetests"
  - bash contrib/test_win_build.sh

after_test:
  # If tests are successful, create binary packages for the project.
  #- "%PYTHON%\\python.exe setup.py bdist_wheel"
  #- "%PYTHON%\\python.exe setup.py bdist_wininst"
  #- "%PYTHON%\\python.exe setup.py bdist_msi"
  - ps: "ls dist"

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#
artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

#---------------------------------#
#        global handlers          #
#---------------------------------#
#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#
